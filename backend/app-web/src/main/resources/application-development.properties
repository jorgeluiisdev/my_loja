spring.application.name=app-web

server.port=8080

spring.datasource.url=jdbc:postgresql://localhost:5432/${DB_POSTGRES:my_application}
spring.datasource.username=${DB_USERNAME:postgres}
spring.datasource.password=${DB_PASSWORD:root}

spring.jpa.show-sql=true
spring.jpa.open-in-view=false
spring.jpa.hibernate.ddl-auto=update

# Flyway
spring.flyway.enabled=false
spring.flyway.locations=classpath:db/migration

#DEBUG Flyway
debug=false
logging.level.org.flywaydb.core=DEBUG

#Loggin hibernate
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql=TRACE
logging.level.org.hibernate.orm.connections.pooling=OFF

# OPEN API - Swagger
springdoc.api-docs.enabled=true
springdoc.swagger-ui.enabled=true
springdoc.api-docs.path=/api/v1/docs

#Tamanho das imagens com servlet multipart
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

#Image storage paths
default.profile.image=classpath:static/images/profile-picture.png
default.product.image=classpath:static/images/product-picture.png
default.banner.image=classpath:static/images/banner-picture.png

upload.image.profile.base-path=uploads/images/profile/
upload.image.product.base-path=uploads/images/product/
upload.image.banner.base-path=uploads/images/banner/

#JWT token and info
app.jwt.secret=${JWT_PASSWORD:secret}
# Expiracao do token JWT (java.time.Duration)
# Formato ISO-8601:
# PT30M = 30 minutos
# PT1H  = 1 hora
# PT45S = 45 segundos
# P1D   = 1 dia
# Nao use apenas numeros (ex: 30), sempre inclua a unidade
app.jwt.expiration=${JWT_EXP_DURATION:PT30M}

#Log security
logging.level.org.springframework.security.web.access=DEBUG